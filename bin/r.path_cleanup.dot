#export EC_PATH_LEGACY_MODE=inclib
# clean up, derive and expand some paths described by environment variables
# derive EC_LD_LIBRARY_PATH and EC_INCLUDE_PATH
# expand PATH, EC_LD_LIBRARY_PATH and EC_INCLUDE_PATH
# clean up PATH MANPATH LD_LIBRARY_PATH LD_RUN_PATH PYTHONPATH TCL_LIBRARY LIBPATH SSM_INCLUDE_PATH EC_INCLUDE_PATH EC_LD_LIBRARY_PATH`
#
  [[ "$1" == --verbose ]] && VerboseCleanupActive="--verbose"
# [[ -z $NoBinBump ]] && PATH=/bin:/usr/bin:$PATH   # keep duo just below ovbin directories

  [[ "${FIX_THE_PATHS:-true}" == true ]] && export FIX_THE_PATHS=$(which r.fix_the_paths 2>/dev/null)
  [[ -z ${FIX_THE_PATHS} ]] && make_fix_the_paths
  [[ -z ${FIX_THE_PATHS} ]] && export FIX_THE_PATHS=$(which r.fix_the_paths 2>/dev/null)
  if [[ -z ${FIX_THE_PATHS} ]] ; then
    echo "WARNING: r.fix_the_paths not found, cleanup/optimization disabled"
    export FIX_THE_PATHS=true
  fi

  eval $(${FIX_THE_PATHS} ${VerboseCleanupActive} +${ORDENV_PLAT}+${BASE_ARCH} PATH MANPATH LD_LIBRARY_PATH LD_RUN_PATH PYTHONPATH TCL_LIBRARY LIBPATH SSM_INCLUDE_PATH)
###  eval $(${FIX_THE_PATHS} ${VerboseCleanupActive} PATH MANPATH LD_LIBRARY_PATH LD_RUN_PATH PYTHONPATH TCL_LIBRARY LIBPATH SSM_INCLUDE_PATH)  # Hack 1 to remove by fixing r.fix_the_paths.c
#
  export MANPATH="${MANPATH}:"  # keep honoring default MANPATH
#
# derive base EC_INCLUDE_PATH from LD_LIBRARY_PATH (legacy)
# export EC_INCLUDE_PATH="$(echo ${LD_LIBRARY_PATH}: | sed -e 's%/lib:%/include %g' -e 's/:/ /g' )"
# derive base EC_INCLUDE_PATH from SSM_INCLUDE_PATH (current)
  if [[ ${EC_PATH_LEGACY_MODE} == *inc* ]] ; then
    echo "=== EC_INCLUDE_PATH in legacy mode ==="
    export EC_INCLUDE_PATH="$(echo ${LD_LIBRARY_PATH}: | sed -e 's%/lib/%/include/%g' -e 's%/lib:%/include:%g' -e 's/:/ /g' )"
  else
    export EC_INCLUDE_PATH="$(echo $SSM_INCLUDE_PATH | sed 's/:/ /g') "
  fi
#
#  derive base EC_LD_LIBRARY_PATH from LD_LIBRARY_PATH (legacy)
#  export EC_LD_LIBRARY_PATH="$(echo $LD_LIBRARY_PATH | sed 's/:/ /g')"
#  export EC_LD_LIBRARY_PATH="$(echo ${SSM_INCLUDE_PATH}: | sed -e 's%/include:%/lib %g' -e 's%/include/%/lib/%g' -e 's/:/ /g' ) "
#
# derive base EC_LD_LIBRARY_PATH from SSM_LIB_PATH (derived from SSM_INCLUDE_PATH if absent)
  if [[ ${EC_PATH_LEGACY_MODE} == *lib* ]] ; then
    echo "=== EC_LD_LIBRARY_PATH in legacy mode ==="
    export EC_LD_LIBRARY_PATH="$(echo $LD_LIBRARY_PATH | sed 's/:/ /g')"
  else
    if [[ -z $SSM_LIB_PATH ]] ; then
      export EC_LD_LIBRARY_PATH="$(echo ${SSM_INCLUDE_PATH}: | sed -e 's%/include/%/lib/%g' -e 's%/include:%/lib:%g' -e 's/:/ /g') "
    else
      export EC_LD_LIBRARY_PATH="$(echo ${SSM_LIB_PATH} | sed 's/:/ /g') "
    fi
  fi
#
# cleanup and expansion for EC_INCLUDE_PATH and EC_LD_LIBRARY_PATH (used later by s.compile and consorts)
  COMP_ARCH=${COMP_ARCH:-${EC_ARCH#${BASE_ARCH}}}    # in case it is not defined
  COMP_ARCH=${COMP_ARCH#/}
  eval $(${FIX_THE_PATHS} ${VerboseCleanupActive} +${ORDENV_PLAT}/${COMP_ARCH}+${COMP_ARCH}+${EC_ARCH} EC_INCLUDE_PATH +${ORDENV_PLAT}/${COMP_ARCH}+${COMP_ARCH}+${EC_ARCH} EC_LD_LIBRARY_PATH)
###  eval $(${FIX_THE_PATHS} ${VerboseCleanupActive} EC_INCLUDE_PATH EC_LD_LIBRARY_PATH)   # Hack 2 to remove by fixing r.fix_the_paths.c
#
unset VerboseCleanupActive
